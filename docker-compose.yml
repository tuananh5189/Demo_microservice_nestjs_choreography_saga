version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq-2
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    networks:
      - rabbitmq_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  order-service:
    build: ./order-service
    container_name: order-service-2
    ports:
     - "3001:3001"
    volumes:
      - ./order-service:/usr/src/app
      # - /usr/src/app/node_modules
    command: npm run start:dev
    networks:
      - rabbitmq_network
    depends_on:
      rabbitmq:
        condition: service_healthy

  inventory-service:
    build: ./inventory-service
    container_name: inventory-service-2
    ports:
     - "3002:3002"
    volumes:
      - ./inventory-service:/usr/src/app
    command: npm run start:dev
    networks:
      - rabbitmq_network
    depends_on:
      rabbitmq:
        condition: service_healthy

  payment-service:
    build: ./payment-service
    container_name: payment-service-2
    ports:
     - "3003:3003"
    volumes:
      - ./payment-service:/usr/src/app
    command: npm run start:dev
    networks:
      - rabbitmq_network
    depends_on:
      rabbitmq:
        condition: service_healthy

  notification-service:
    build: ./notification-service
    container_name: notification-service-2
    ports:
     - "3004:3004"
    volumes:
      - ./notification-service:/usr/src/app
    command: npm run start:dev
    networks:
      - rabbitmq_network
    depends_on:
      rabbitmq:
        condition: service_healthy

networks:
  rabbitmq_network:
    driver: bridge
